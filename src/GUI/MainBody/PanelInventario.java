/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.MainBody;

import GUI.Dialog.DialogProducto;
import Logica.LogicaNegocio;
import Logica.LogicaTemas;
import TableModels.ProductoTableModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 * Panel Inventario
 *
 * @author Plam
 */
public class PanelInventario extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;

    private List<JLabel> listaLabelsH2;
    private JFrame frame;
    private LogicaNegocio logica;

    /**
     * Constructor
     */
    public PanelInventario(JFrame frame, LogicaNegocio logica) {
        initComponents();
        this.frame = frame;
        this.logica = logica;

        setBorder(LogicaTemas.GET_TITLE_BORDER("INVENTARIO"));
        
        listaLabelsH2 = new ArrayList<>();
        listaLabelsH2.add(jLabel1H2);

        LogicaTemas.addJTable(jTableProductos);
        
        LogicaTemas.addListJLabel("JLabelH2Inventario", listaLabelsH2);

        jTableProductos.setModel(new ProductoTableModel(this.logica.getListaProductos()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonCrearProducto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProductos = new javax.swing.JTable();
        jButtonBorrarProducto = new javax.swing.JButton();
        jButtonCambiarProducto = new javax.swing.JButton();
        jLabel1H2 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(901, 500));

        jButtonCrearProducto.setFont(LogicaTemas.BUTTON_FONT);
        jButtonCrearProducto.setText("Crea nuevo Producto");
        jButtonCrearProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCrearProductoActionPerformed(evt);
            }
        });

        jTableProductos.setFont(LogicaTemas.TEXT_FONT);
        jTableProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cod Producto", "Nombre", "Peso", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableProductos);

        jButtonBorrarProducto.setFont(LogicaTemas.BUTTON_FONT);
        jButtonBorrarProducto.setText("Borra un Producto");
        jButtonBorrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarProductoActionPerformed(evt);
            }
        });

        jButtonCambiarProducto.setFont(LogicaTemas.BUTTON_FONT);
        jButtonCambiarProducto.setText("Cambia los datos del Producto");
        jButtonCambiarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCambiarProductoActionPerformed(evt);
            }
        });

        jLabel1H2.setFont(LogicaTemas.TEXT_FONT);
        jLabel1H2.setText("Productos Disponibles");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCambiarProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonBorrarProducto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonCrearProducto))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1H2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1H2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCrearProducto)
                    .addComponent(jButtonBorrarProducto)
                    .addComponent(jButtonCambiarProducto))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo para cambiar la informacion de un producto. Se abre ventana nueva 
     * @param evt 
     */
    private void jButtonCambiarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCambiarProductoActionPerformed
        if (jTableProductos.getSelectedRow() == -1) {
            return;
        }
        int cod = (int) jTableProductos.getValueAt(jTableProductos.getSelectedRow(), 0);
        if (cod == -1) {
            return;
        }
        DialogProducto dialog = new DialogProducto(frame, true, logica, logica.getProductoPorID(cod));
        dialog.setVisible(true);
        jTableProductos.setModel(new ProductoTableModel(logica.getListaProductos()));
    }//GEN-LAST:event_jButtonCambiarProductoActionPerformed

    /**
     * Metodo para actualizar pantalla inventario,
     * se refrescara la lista de los productos
     */
    public void actualizarPanelInventario(){
        jTableProductos.setModel(new ProductoTableModel(logica.getListaProductos()));
        
    }
    
    /**
     * Metodo para crear un producto. Se abre ventana nueva
     * @param evt 
     */
    private void jButtonCrearProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearProductoActionPerformed
        DialogProducto dialog = new DialogProducto(frame, true, logica, null);
        dialog.setVisible(true);
        jTableProductos.setModel(new ProductoTableModel(logica.getListaProductos()));
    }//GEN-LAST:event_jButtonCrearProductoActionPerformed

    /**
     * Metodo para borrar  un producto. Se borra tambien de la base de datos
     * @param evt 
     */
    private void jButtonBorrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarProductoActionPerformed
        if (jTableProductos.getSelectedRow() == -1) {
            return;
        }
        int cod = (int) jTableProductos.getValueAt(jTableProductos.getSelectedRow(), 0);
        if (cod != -1) {
            System.out.println(cod);
            int input = JOptionPane.showConfirmDialog(this, "Estas seguro que quieres borrar producto con ID " + cod, "Borrar Producto", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
            if (input == JOptionPane.OK_OPTION) {
                logica.borrarProducto(cod);
            }
        }
        jTableProductos.setModel(new ProductoTableModel(logica.getListaProductos()));
    }//GEN-LAST:event_jButtonBorrarProductoActionPerformed

    /**
     * Metodo para manejar los clicks de la table de los productos
     * @param evt 
     */
    private void jTableProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableProductosMouseClicked
        int ID_producto = (int) jTableProductos.getValueAt(jTableProductos.getSelectedRow(), 0);
        if (ID_producto != -1 && evt.getClickCount() >= 2) {
            DialogProducto dialog = new DialogProducto(frame, true, logica, logica.getProductoPorID(ID_producto));
            dialog.setVisible(true);
        }
    }//GEN-LAST:event_jTableProductosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrarProducto;
    private javax.swing.JButton jButtonCambiarProducto;
    private javax.swing.JButton jButtonCrearProducto;
    private javax.swing.JLabel jLabel1H2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableProductos;
    // End of variables declaration//GEN-END:variables
    private static final org.apache.log4j.Logger logger = org.apache.log4j.Logger.getLogger(PanelInventario.class);
}
